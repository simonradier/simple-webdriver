name: Tests & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest

    env:
      COVERALLS_REPO_TOKEN: "${{ secrets.COVERALLS_REPO_TOKEN }}"
      COVERALLS_GIT_BRANCH: "${{ github.ref }}"
      COVERALLS_SERVICE_NAME: "Github CI"

    steps:
      - uses: actions/checkout@v2
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4

      - name: Install npm dependencies
        run: npm install

      - name: Build simple-webdriver package
        run: npm run prepublishOnly

      - name: Launch unit testing
        run: npm run test 

      - name: Launch coverage update
        if: github.ref == 'refs/heads/master'
        run: npm run coverage
         
  
  e2e-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        browser: [chrome, edge, safari, firefox]
        exclude:
          - os: macos-latest
            browser: edge #because its webdriver is buggy on MacOS with GithubAction
          - os: windows-latest
            browser: safari #Not available
          - os: ubuntu-latest
            browser: safari #Not available
          - os: ubuntu-latest
            browser: edge #Not available
    steps:
      - uses: actions/checkout@v2
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4

      - name: Install npm dependencies
        run: npm install

      - name: Build simple-webdriver package
        run: npm run prepublishOnly

      - name: Run chromedriver (ubuntu)
        if: ${{ matrix.browser == 'chrome' && matrix.os == 'ubuntu-latest' }}
        run: xvfb-run --auto-servernum chromedriver & 

      - name: Run chromedriver (windows)
        if: ${{ matrix.browser == 'chrome' && matrix.os == 'windows-latest' }}
        run: cmd /c "START chromedriver" 

      - name: Run chromedriver (macos)
        if: ${{ matrix.browser == 'chrome' && matrix.os == 'macos-latest' }}
        run: chromedriver & 

      - name: Run geckodriver (ubuntu)
        if: ${{ matrix.browser == 'firefox' && matrix.os == 'ubuntu-latest' }}
        run: xvfb-run --auto-servernum geckodriver &

      - name: Run geckodriver (windows)
        if: ${{ matrix.browser == 'firefox' && matrix.os == 'windows-latest' }}
        run: cmd /c "START geckodriver"

      - name: Run geckodriver (macos)
        if: ${{ matrix.browser == 'firefox' && matrix.os == 'macos-latest' }}
        run: geckodriver &

      - name: Run msedgedriver (windows)
        if: ${{ matrix.browser == 'edge' && matrix.os == 'windows-latest'  }}
        run: cmd /c "START msedgedriver --port=9415" 

      - name: Run msedgedriver (macos)
        if: ${{ matrix.browser == 'edge' && matrix.os == 'macos-latest'  }}
        run: msedgedriver --port=9415 & 

      - name: Run safaridriver (macos)
        if: ${{ matrix.browser == 'safari' }}
        run: |
          sudo safaridriver --enable
          safaridriver --port 9315 & 

      - name: Run test with webdriver ${{ matrix.os }}-${{ matrix.browser }}
        run: npm run test-wd-${{ matrix.browser }}